# generated by datamodel-codegen:
#   filename:  data.json
#   timestamp: 2022-08-26T22:43:25+00:00

from __future__ import annotations

from typing import Any, Dict, List, Optional, Union

from pydantic import BaseModel


class Config(BaseModel):
    incl_poster: Optional[int] = None
    html_support: Optional[int] = None
    chat_id: Optional[str] = None
    bot_token: Optional[str] = None
    incl_subject: Optional[int] = None
    disable_web_preview: Optional[int] = None


class Actions(BaseModel):
    on_play: Optional[int] = None
    on_stop: Optional[int] = None


class OnPlay(BaseModel):
    subject: Optional[str] = None
    body: Optional[str] = None


class OnStop(BaseModel):
    subject: Optional[str] = None
    body: Optional[str] = None


class NotifyText(BaseModel):
    on_play: Optional[OnPlay] = None
    on_stop: Optional[OnStop] = None


class NotifierConfig(BaseModel):
    id: Optional[int] = None
    agent_id: Optional[int] = None
    agent_name: Optional[str] = None
    agent_label: Optional[str] = None
    friendly_name: Optional[str] = None
    config: Optional[Config] = None
    config_options: Optional[List[Union[Dict[str, Any], str]]] = None
    actions: Optional[Actions] = None
    notify_text: Optional[NotifyText] = None


class Response(BaseModel):
    result: Optional[str] = None
    message: Any = None
    data: NotifierConfig


class Model(BaseModel):
    response: Response
